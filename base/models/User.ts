/********************************************************************************************************************
 * ******************************************************************************************************************
 * ******************************************************************************************************************
 *
 *                          AUTOGENERATED CODE : DO NOT EDIT
 *
 *
 * ******************************************************************************************************************
 * ******************************************************************************************************************
 ******************************************************************************************************************/

import { ApiProperty } from "@nestjs/swagger";
import { Exclude } from "class-transformer";
import {
    IsDate,
    IsEmail,
    IsNotEmpty,
    IsOptional,
    IsString
} from "class-validator";

import { EnumUserRole } from "../enums/EnumUserRole";
import { Book } from "./Book";
export class User {
    @ApiProperty()
    @IsNotEmpty()
    @IsDate()
    createdAt: Date;
    @ApiProperty()
    @IsEmail()
    @IsEmail()
    @IsNotEmpty()
    @IsString()
    email: string;
    @ApiProperty()
    @IsOptional()
    @IsString()
    firstName?: string;
    @ApiProperty()
    @IsNotEmpty()
    @IsString()
    id: string;
    @ApiProperty()
    @IsOptional()
    @IsString()
    lastName?: string;
    @ApiProperty()
    @Exclude()
    @Exclude()
    @IsNotEmpty()
    @IsString()
    password: string;
    @ApiProperty()
    @IsNotEmpty()
    roles: EnumUserRole;
    @ApiProperty()
    @IsNotEmpty()
    @IsDate()
    updatedAt: Date;
    @ApiProperty()
    @IsNotEmpty()
    @IsString()
    username: string;
    @ApiProperty()
    @IsNotEmpty()
    Book?: Book;
}
